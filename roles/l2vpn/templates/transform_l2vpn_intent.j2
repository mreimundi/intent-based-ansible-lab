#jinja2: lstrip_blocks: "True"
{% set go = namespace(found=false) %}
{% for svc, svc_spec in l2vpn.items() %}
{% if inventory_hostname in svc_spec.interface_list or ('dcgw' in group_names and (svc_spec.expose | default(False))) %}
{% set go.found = true %}
{% endif %}
{% endfor %}
{% if go.found %} 
network_instance: 
{% for svc, svc_spec in l2vpn.items() %}
    {% if inventory_hostname in svc_spec.interface_list or ('dcgw' in group_names and (svc_spec.expose | default(False))) %}
    {% if svc_spec.vlan == 'untagged' %}
        {% set subif_idx = 0 %}
    {% else %}
        {% set subif_idx = svc_spec.vlan %}
    {% endif %}
    {{ svc }}:
        _state: {{ svc_spec._state|default('present') }}
        {% if 'dcgw' not in group_names %}
        interfaces:
        {% for itf in svc_spec.interface_list[inventory_hostname] %}
        - {{ itf }}.{{ subif_idx }}
        {% endfor %}
        {% endif %}
        description: {{ svc_spec.description | default("no description") }}
        type: {{ svc_spec.type | default('mac-vrf') }}
        {% if 'dcgw' not in group_names %}
        vxlan_interface:
            - vxlan1.{{svc_spec.id}}
        {% endif %}
        protocols:
            bgp_evpn:
                vxlan_interface: vxlan1.{{ svc_spec.id }}
                evi: {{ svc_spec.id }}
            bgp_vpn:
                export_rt: {{svc_spec.export_rt | default('100:%s'|format(svc_spec.id)) }}
                import_rt: {{svc_spec.import_rt | default('100:%s'|format(svc_spec.id)) }}
        {% if 'dcgw' in group_names %}
        id: {{ svc_spec.id }}
        {% endif %}
    {% endif %}
{% endfor %}
{% if 'dcgw' not in group_names %}
subinterface:
{% set acls_v4_in = [] %}
{% set acls_v4_out = [] %}
{% for svc, svc_spec in l2vpn.items() %}
    {% if svc_spec.vlan == 'untagged' %}
        {% set subif_idx = 0 %}
    {% else %}
        {% set subif_idx = svc_spec.vlan %}
    {% endif %}
    {% if svc_spec.acl_v4_in is defined %}
        {% set acls_v4_in = acls_v4_in + svc_spec.acl_v4_in %}
    {% endif %}
    {% if svc_spec.acl_v4_out is defined %}
        {% set acls_v4_out = acls_v4_out + svc_spec.acl_v4_out %}
    {% endif %}
    {% if inventory_hostname in svc_spec.interface_list %}
    {% for itf in svc_spec.interface_list[inventory_hostname] %}
    {{ itf }}.{{ subif_idx }}:
        _state: {{ svc_spec._state|default('present') }}
        type: bridged
        vlan: {{ svc_spec.vlan }}
        acl:
            in:
                ipv4: {{ acls_v4_in }}
            out:
                ipv4: {{ acls_v4_out }}
    {% endfor %}
    {% endif %}
{% endfor %}
interfaces:
{% for svc, svc_spec in l2vpn.items() %}
    {% if inventory_hostname in svc_spec.interface_list %}
    {% for itf in svc_spec.interface_list[inventory_hostname] %}
    {{ itf }}:
        _state: {{ svc_spec._state|default('present') }}
        vlan_tagging: true
    {% endfor %}
    {% endif %}
{% endfor %}
{% endif %}
tunnel_interface:
    vxlan1:
{% for svc, svc_spec in l2vpn.items() %}
    {% if inventory_hostname in svc_spec.interface_list or ('dcgw' in group_names and (svc_spec.expose | default(False))) %}
        {{svc_spec.id}}:
            _state: {{ svc_spec._state|default('present') }}
            type: bridged
            ingress_vni: {{ svc_spec.id }}
    {% endif %}
{% endfor %}
{% endif %}
